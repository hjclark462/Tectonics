// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel InitSeed
#pragma kernel TestColours

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Source;
RWTexture2D<float4> Result;

struct PointData
{
	float4 pointOnPlate;
	int plateType;
	float2 direction;
};

RWStructuredBuffer<PointData> points;
StructuredBuffer<float4> colours;
int width;
int height;
int step;


[numthreads(1, 1, 1)]
void InitSeed(uint3 id : SV_DispatchThreadID)
{
	int2 seedPos = points[id.x].pointOnPlate.xy;
	uint px = uint(seedPos.x) % width;
	uint py = uint(seedPos.y) % height;
	Source[uint2(px, py)] = float4(px, py, id.x + 1, 1);
}

[numthreads(8, 8, 1)]
void TestColours(uint3 id : SV_DispatchThreadID)
{	
	if (id.x < 128)
	{
		Source[id.xy] = float4(1, 0, 0, 1);
	}
}